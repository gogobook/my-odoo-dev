version: '3.5'
services:

  # djangosite:
  #   build: ./djangosite
  #   depends_on:
  #     - web
  #   # ports:
  #   #   - "8080:8080"
  #   volumes:
  #     - ./djangosite:/usr/src/app
  #     - ./.run/gunicorn:/var/run/gunicorn
  #     - ./.run/redis:/var/run/redis
  #     - ./.run/postgresql:/var/run/postgresql
  #   command: sh -c "gunicorn -w 2 --bind=unix:/var/run/gunicorn/gunicorn.sock -k uvicorn.workers.UvicornWorker --log-level info djangosite.asgi:application"
  #   # command: sh -c "python manage.py runserver 0.0.0.0:8080"


  web:
    build: ./web
    depends_on:
      - db
    # ports:
    #   - "8069:8069"
    volumes:
      - ./.run:/var/run/
      - ./web:/usr/src/app
      - ./web-data:/var/lib/odoo
      - ./config:/etc/odoo
      - ./addons:/mnt/extra-addons
      # - ./bin:/var/lib/app/bin

      # - ./sessions:/var/lib/odoo/sessions #
    command: sh -c "/usr/src/app/odoo-bin gevent -c /etc/odoo/odoo.conf"
    # sh -c "gunicorn odoo.service.wsgi_server:application -D && /usr/src/app/odoo-bin -c /etc/odoo/odoo.conf"
    # sh -c "gunicorn odoo.service.wsgi_server:application"
    # sh -c "/usr/src/app/odoo-bin -c /etc/odoo/odoo.conf"
    # odoo -r odoo -w odoo -i addons -d odoo
    # gunicorn odoo:service.wsgi_server.application -c odoo-wsgi.py wsgi方法目前失敗中
    #   odoo -r odoo -w odoo -i addons -d odoo

    # ENTRYPOINT ["/entrypoint.sh"]
    # CMD ["odoo"]
    env_file: ./.env
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=myodoo

  db:
    image: postgres:13.1-alpine
    # ports:
    #   - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=myodoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
      - ./.run/postgresql:/var/run/postgresql

  nginx:
    image: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./djangosite/templates/static:/var/www/app/static        # 這裡把web (也就是django)的static files放在nginx中。
      - ./djangosite/templates/media:/var/www/app/media          # 同樣的，把media也放在nginx中。
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./.run/gunicorn:/var/run/gunicorn
      - ./nginx/html:/usr/share/nginx/html:ro # html 內放置let's encrypt 的驗證碼及google search console 的驗證碼。
      - ./nginx_data/certbot/conf:/etc/letsencrypt
      - ./nginx_data/certbot/www:/var/www/certbot
      - ./web/addons:/var/www/odoo/addons1
      - ./addons:/var/www/odoo/addons2

    # logging:
    #   driver: none
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"